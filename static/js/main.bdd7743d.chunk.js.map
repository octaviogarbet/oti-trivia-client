{"version":3,"sources":["constants.js","pages/player/index.jsx","pages/host/index.jsx","pages/join/index.jsx","pages/new-game/index.jsx","assets/images/otilogo.png","assets/images/trivial-bg.jpg","pages/game/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["API","WS","Player","props","gameId","useParams","useState","banned","canPush","game","setGame","wsState","setWsState","useEffect","ws","WebSocket","myConst","localStorage","getItem","onopen","onmessage","evt","message","JSON","parse","data","answering","body","length","find","b","answerOrder","onclose","console","log","className","title","disabled","onClick","send","stringify","type","error","handlePush","Host","step","setStep","currentCategory","setCurrentCategory","axios","get","then","response","FormControl","variant","sx","m","minWidth","InputLabel","id","Select","labelId","value","onChange","$event","target","label","categories","map","c","MenuItem","Button","put","category","Join","player","setPlayer","history","useHistory","TextField","post","setItem","push","NewGame","name","totalCategories","totalQuestions","gameConfig","setGameConfig","index","e","handleChangeCategory","getCategories","Game","style","backgroundImage","bg","alt","src","logo","pointsTable","cindex","questions","q","qindex","points","answered","nextQuestion","scoreBoard","canAnswer","item","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdd7743d.chunk.js","sourcesContent":["export const API = \"http://184.72.145.192:3000/\"\nexport const WS = \"ws://184.72.145.192:3000/\"","import React, { useEffect, useState } from 'react';\nimport {\n  useParams\n} from \"react-router-dom\";\nimport './player.css';\nimport * as myConst from '../../constants';\n\nfunction Player(props) {\n  let { gameId } = useParams();\n  const [game, setGame] = useState({banned: false, canPush: true});\n  const [wsState, setWsState] = useState(null);\n\n  useEffect(() => {\n    const ws = new WebSocket(myConst.WS + \"websocket?gameId=\"+gameId+\"&player=\"+localStorage.getItem(gameId + 'player'));\n    ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n    }\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data)\n      let answering = false\n      if (message && message.body) {\n        let banned = false\n        if (message.body.banned.length) {\n          const inBanned = message.body.banned.find(b => b === localStorage.getItem(gameId + 'player'))\n          if (inBanned)\n            banned = true;\n        }\n        if (message.body.answerOrder.length) {\n          const inAnswering = message.body.answerOrder.find(b => b === localStorage.getItem(gameId + 'player'))\n          if (inAnswering)\n            answering = true;\n        }\n        setGame({banned, canPush: !answering})\n      }\n    }\n\n    ws.onclose = () => {\n      console.log('disconnected')\n    }\n    setWsState(ws)\n\n  }, [gameId]);\n  \n  const handlePush = () => {\n    //TODO: call backend to push\n    try {\n      wsState.send(JSON.stringify({type: 'push'})) //send data to the server\n    } catch (error) {\n      console.log(error) // catch error\n    }\n  }\n\n  return (\n    <div className=\"player-pannel\">\n      <div className=\"center-button\">\n        <button title=\"PRESS\" className=\"button\" disabled={!game.canPush || game.banned} onClick={() => {handlePush()}}>PRESS</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Player;\n","\nimport React, { useState, useEffect } from 'react'\nimport {\n  useParams\n} from \"react-router-dom\";\nimport axios from 'axios';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Button from '@mui/material/Button';\nimport './host.css';\nimport * as myConst from '../../constants';\n\nfunction Host(props) {\n  let { gameId } = useParams();\n  const [game, setGame] = useState({});\n  const [step, setStep] = useState(1);\n  const [currentCategory, setCurrentCategory] = useState(1);\n\n\n  useEffect(() => {\n    //TODO: get data from backend and websockets\n    axios.get(myConst.API + 'game/' + gameId).then(response => {\n      setGame(response.data)\n    })\n  }, [gameId]);\n  \n  const handleStart = () => {\n    axios.put(myConst.API + 'game/' + gameId + '/start', {}).then(response => {\n    })\n  }\n\n  const handleReset = () => {\n    axios.put(myConst.API + 'game/' + gameId + '/reset', {}).then(response => {\n    })\n  }\n\n  const handleSkip = () => {\n    axios.put(myConst.API + 'game/' + gameId + '/skip', {}).then(response => {\n    })\n    setStep(1);\n  }\n\n  const handleCorrectAnswer = () => {\n    axios.put(myConst.API + 'game/' + gameId + '/correct', {}).then(response => {\n    })\n    setStep(1);\n  }\n\n  const handleWrongAnswer = () => {\n    axios.put(myConst.API + 'game/' + gameId + '/wrong', {}).then(response => {\n    })\n  }\n\n  const selectCategory = ($event) => {\n    setCurrentCategory($event.target.value);\n  }\n\n  const goToQuestion = () => {\n    axios.put(myConst.API + 'game/' + gameId + '/answer', {category: currentCategory}).then(response => {\n      //setGame(response.data)\n    })\n    setStep(2);\n  }\n\n  return (\n    <>\n      {\n        (step === 1) ? (\n          <div className=\"host-pannel\">\n            <FormControl variant=\"standard\" sx={{ m: 1, minWidth: 120 }}>\n              <InputLabel id=\"demo-simple-select-standard-label\">Category</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-standard-label\"\n                id=\"demo-simple-select-standard\"\n                value={currentCategory}\n                onChange={selectCategory}\n                label=\"Categoria\"\n              >\n                {\n                  game?.categories?.map(c => (\n                    <MenuItem value={c} key={c} >{c}</MenuItem>\n                  ))\n                }\n              </Select>\n            </FormControl>\n            <div className=\"center-button\">\n              <Button title=\"Word Pass\" onClick={() => {goToQuestion()}}>Go</Button>\n            </div>\n          </div>\n        ) :\n        <div className=\"host-pannel\">\n          <div className=\"buttons-row\">\n            <Button variant=\"contained\" onClick={() => {handleStart()}}>Start</Button>\n            <Button variant=\"contained\" onClick={() => {handleReset()}}>Reset</Button>\n          </div>\n          <div className=\"buttons-row\">\n            <Button variant=\"contained\" onClick={() => {handleCorrectAnswer()}}>C</Button>\n            <Button variant=\"contained\" onClick={() => {handleWrongAnswer()}}>W</Button>\n          </div>\n          <div className=\"buttons-row\">\n            <Button variant=\"contained\" onClick={() => {handleSkip()}}>Skip</Button>\n          </div>\n        </div>\n      }\n    </>\n  );\n}\n\nexport default Host;\n","import React, { useState } from 'react'\nimport './join.css';\nimport TextField from '@mui/material/TextField';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport * as myConst from '../../constants';\n\nfunction Join(props) {\n  const [player, setPlayer] = useState('');\n  let { gameId } = useParams();\n  let history = useHistory();\n\n  const handleChangeName = ($event) => {\n    setPlayer($event.target.value);\n  }\n  \n  const handleJoin = () => {\n    //TODO: Call backend join game\n    axios.post(myConst.API + 'join/' + gameId, { player }).then(response => {\n      localStorage.setItem(`${gameId}player`, player);\n      history.push(`/player/${gameId}`);\n    });\n  }\n\n  return (\n    <div className=\"join-pannel\">\n      <TextField\n        id=\"player-name\"\n        label=\"Name\"\n        type=\"text\"\n        variant=\"standard\"\n        value={player}\n        onChange={handleChangeName}\n      />\n      <div className=\"center-button\">\n        <Button title=\"Join\" onClick={() => {handleJoin()}}>Join</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default Join;\n","import React, { useState } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport './new-game.css';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport axios from 'axios';\nimport * as myConst from '../../constants';\n\nfunction NewGame(props) {\n  const [gameConfig, setGameConfig] = useState({\n    name: '',\n    totalCategories: 1,\n    totalQuestions: 1,\n    categories: ['example']\n  });\n  let history = useHistory();\n  \n  const handleCreate = () => {\n    axios.post(myConst.API + 'game', gameConfig).then(response => {\n      history.push(`game/${response.data.id}`);\n    })\n  }\n\n  const handleChangeTotalCategories = ($event) => {\n    const categories = [];\n    for (let index = 0; index < $event.target.value; index++) {\n      categories.push('');\n    }\n    setGameConfig({...gameConfig, totalCategories: $event.target.value, categories });\n  }\n\n  const handleChangeName = ($event) => {\n    setGameConfig({...gameConfig, name: $event.target.value});\n  }\n\n  const handleChangeQuestion = ($event) => {\n    setGameConfig({...gameConfig, totalQuestions: $event.target.value});\n  }\n\n  const handleChangeCategory = (index, $event) => {\n    const { categories } = gameConfig;\n    categories[index] = $event.target.value;\n    setGameConfig({...gameConfig, categories });\n  }\n\n  const getCategories = () => {\n    const categories = []\n    for (let index = 0; index < gameConfig.totalCategories; index++) {\n      categories.push(\n        <TextField\n          id={\"category-\" + (index + 1)}\n          className=\"form-element\"\n          key={\"category-\" + (index + 1)}\n          label={\"Category \" + (index + 1)}\n          type=\"text\"\n          variant=\"standard\"\n          value={gameConfig.categories[index]}\n          onChange={(e) => handleChangeCategory(index, e)}\n        />\n      );\n    }\n    return categories;\n  }\n\n  return (\n    <div className=\"admin-pannel\">\n      <TextField\n        id=\"player-name\"\n        className=\"form-element\"\n        label=\"Name\"\n        type=\"text\"\n        variant=\"standard\"\n        value={gameConfig.name}\n        onChange={handleChangeName}\n      />\n\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\"># Categories</InputLabel>\n        <Select\n          labelId=\"select-categories-label\"\n          id=\"select-categories\"\n          className=\"form-element\"\n          value={gameConfig.totalCategories}\n          label=\"Categories\"\n          onChange={handleChangeTotalCategories}\n        >\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={2}>2</MenuItem>\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={8}>8</MenuItem>\n          <MenuItem value={9}>9</MenuItem>\n        </Select>\n      </FormControl>\n\n      <FormControl>\n        <InputLabel id=\"demo-simple-select-label\"># Questions</InputLabel>\n        <Select\n          labelId=\"select-questions-label\"\n          id=\"select-questions\"\n          className=\"form-element\"\n          value={gameConfig.totalQuestions}\n          label=\"Questions\"\n          onChange={handleChangeQuestion}\n        >\n          <MenuItem value={1}>1</MenuItem>\n          <MenuItem value={2}>2</MenuItem>\n          <MenuItem value={3}>3</MenuItem>\n          <MenuItem value={4}>4</MenuItem>\n          <MenuItem value={5}>5</MenuItem>\n          <MenuItem value={6}>6</MenuItem>\n          <MenuItem value={7}>7</MenuItem>\n          <MenuItem value={8}>8</MenuItem>\n          <MenuItem value={9}>9</MenuItem>\n        </Select>\n      </FormControl>\n      <div>\n        <p>Categories</p>\n        {\n          getCategories()\n        }\n      </div>\n\n      <div className=\"center-button\">\n        <Button title=\"Create\"  onClick={() => {handleCreate()}}>Create</Button>\n      </div>\n    </div>\n  );\n}\n\nexport default NewGame;\n","export default __webpack_public_path__ + \"static/media/otilogo.9c0bbbd7.png\";","export default __webpack_public_path__ + \"static/media/trivial-bg.1e3b1823.jpg\";","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n  useParams\n} from \"react-router-dom\";\nimport './game.css';\nimport logo from '../../assets/images/otilogo.png';\nimport bg from '../../assets/images/trivial-bg.jpg';\nimport * as myConst from '../../constants';\n\nfunction Game(props) {\n  let { gameId } = useParams();\n  const [game, setGame] = useState({});\n\n  useEffect(() => {\n    //TODO: get data from backend and \n    \n    const ws = new WebSocket(myConst.WS + \"websocket?gameId=\"+gameId);\n    ws.onopen = () => {\n      // on connecting, do nothing but log it to the console\n    }\n    ws.onmessage = (evt) => {\n      // listen to data sent from the websocket server\n      const message = JSON.parse(evt.data)\n      //this.setState({dataFromServer: message})\n      if (message.body)\n        setGame(message.body)\n    }\n\n    ws.onclose = () => {\n      // automatically try to reconnect on connection loss\n    }\n    axios.get(myConst.API + 'game/' + gameId).then(response => {\n      setGame(response.data)\n    })\n  }, [gameId]);\n\n  return (\n    <main className=\"control-pannel\" style={{ backgroundImage:`url(${bg})` }} >\n      <div className=\"logo\">\n      <img alt=\"Oti´s Dev Week Trivia\" src={logo}/>\n      </div>\n      <div className=\"main-box\">\n        <div className=\"main-container\">\n\n          <div className=\"principal-info\">\n            <section className=\"board\">\n              {\n                game?.pointsTable?.map((c, cindex) => (\n                  <div key={cindex} className=\"column\">\n                    <div className={\"category cat-\"+cindex}>{c.category}</div>\n                    <div className=\"points-column\">\n                      {c.questions.map((q, qindex) => (\n                        <div\n                          key={qindex}\n                          className={'points points-'+ q.points + ' ' + (q.answered ? 'answered' : 'pending') + ' ' + (c.category === game?.nextQuestion?.category && q.points === game?.nextQuestion?.points && 'focus')}\n                        >{q.points}</div>\n                      ))}\n                    </div>\n                  </div>\n                ))\n              }\n            </section>\n            <section className=\"score-table\">\n              <h2>Score </h2>\n              <div className=\"row\">\n              {\n                game?.scoreBoard?.map(player => (\n                  <div className=\"score-box\" key={player.name}>\n                    <div className=\"box-player\">{player.name}</div>\n                    <div className=\"box-points\">{player.points}</div>\n                  </div>\n                ))\n              }\n              </div>\n            </section>\n          </div>\n          <section className={'answers ' + (game?.canAnswer && 'can')}>\n            <article className=\"answers-box\">\n              <h3>Answer order</h3>\n              { game?.answerOrder?.map((item, index) => (<div key={index} className={\"answer-item \" + (item === game.answering && 'answering')}>{item}</div>))}\n            </article>\n            <article className=\"answers-box\">\n              <h3>Banned</h3>\n              { game?.banned?.map((item, index) => (<div key={index} className=\"answer-item\">{item}</div>))}\n            </article>\n          </section>\n        </div>\n      </div>\n    </main>\n  );\n}\n\nexport default Game;\n","import {\n  HashRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Player from \"./pages/player\";\nimport Host from \"./pages/host\";\nimport Join from \"./pages/join\";\nimport NewGame from \"./pages/new-game\";\nimport Game from \"./pages/game\";\n\nfunction App() {\n  return (\n    <Router>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n          <Route path=\"/game/:gameId\">\n            <Game />\n          </Route>\n          <Route path=\"/join/:gameId\">\n            <Join />\n          </Route>\n          <Route path=\"/secrethost/:gameId\">\n            <Host />\n          </Route>\n          <Route path=\"/player/:gameId\">\n            <Player />\n          </Route>\n          <Route path=\"/\">\n            <NewGame />\n          </Route>\n        </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}